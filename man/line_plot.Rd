% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/line_plot.R
\name{line_plot}
\alias{line_plot}
\title{Line plot function}
\usage{
line_plot(df, x_var, color_var = NULL, y_var = NULL,
  group_by_x_var = TRUE, y_percent = TRUE, percent_accuracy = 1,
  y_lim = NULL, y_breaks = 2000, y_breaks_end = 1e+05,
  line_size = 1, title = NULL, subtitle = NULL, title_size = 14,
  subtitle_size = 10, title_margin = 1, y_lab = NULL, x_lab = NULL,
  background_color = "moccasin", panel_grid_color = "grey",
  panel_grid_size = 0.3, axis_size = 0.3, axis_text_angle = 0,
  text_size = 8, fill_colors = c("#377EB8", "#E41A1C", "#4DAF4A",
  "#984EA3", "#FF7F00", "#FFFF33", "#A65628", "#F781BF"),
  legend_pos = "bottom", legend_labels = ggplot2::waiver(),
  label_breaks = ggplot2::waiver(), legend_background = "transparent",
  legend_row = NULL, legend_col = NULL)
}
\arguments{
\item{df}{Data frame.}

\item{x_var}{Variable for x-axis, use string name.
Recommended that x_var is
in character in df (not necessary).}

\item{color_var}{Variable for the different colors in lines, use string
name. Use NULL if only one color for lines.}

\item{y_var}{Variable for y axis, if NULL, count is used.}

\item{group_by_x_var}{Boolean indicating if percentages should be for x_var
or color_var.}

\item{y_percent}{If TRUE, y-axis is in percent form. Otherwise in count
form.}

\item{percent_accuracy}{Set accuracy for \code{\link{percent_format}}.}

\item{y_lim}{Limit on y-axis.}

\item{y_breaks}{Length between each break on y-axis.}

\item{y_breaks_end}{Break end, default for 100000. Works for all count
values below that.}

\item{line_size}{Size of the lines.}

\item{title}{Plot title, NULL if no title.}

\item{subtitle}{Small text under title, NULL if no subtitle.}

\item{title_size}{Text size of title in pt.}

\item{subtitle_size}{Text size of subtitle in pt.}

\item{title_margin}{Distance between subtitle and title in pt. If no
subtitle, title_margin  0.5*title_size.}

\item{y_lab}{Y-axis label, use NULL for no label.}

\item{x_lab}{X-axis label, use NULL for no label.}

\item{background_color}{Color of the panel background.}

\item{panel_grid_color}{Color of the panel grid lines.}

\item{panel_grid_size}{Size of the panel grid lines in plot, useful to
change if large dpi!}

\item{axis_size}{Size of the axis lines.}

\item{axis_text_angle}{Angle of the tick texts, 45 is recommended for many x
levels.}

\item{text_size}{Size of the text in pt.}

\item{fill_colors}{Colors of the different categories in color_var.}

\item{legend_pos}{Position of the legend in plot, if c(1,1), c(1,0) etc,
legend inside plot.}

\item{legend_labels}{Label for each legend key.}

\item{label_breaks}{Order of the legend keys.}

\item{legend_background}{Color of the legend background.}

\item{legend_row}{How many rows for the legends.}

\item{legend_col}{How many columns for the legends.}
}
\value{
Ggplot object containing line-plot.
}
\description{
Standard line plot using ggplot2. Y-variable not necessary.
}
\examples{
library(ggplot2)
library(dplyr)
# y_percent = TRUE
line_plot(df = diamonds, x_var = 'cut', color_var = 'color', y_breaks = 2)
line_plot(df = diamonds, x_var = 'cut', color_var = 'color',
group_by_x_var = FALSE, y_breaks = 2)

# y_percent = FALSE
line_plot(df = diamonds, x_var = 'cut', color_var = 'color',
y_percent = FALSE, y_breaks = 2000)

# y variable included
df <- diamonds \%>\% group_by_('color', 'cut') \%>\% summarise(y = n())
line_plot(df = df, x_var = 'cut', color_var = 'color', y_var = 'y',
y_percent = FALSE, y_breaks = 2000)
line_plot(df = df[df$color == 'D',], x_var = 'cut', y_var = 'y',
y_percent = FALSE, y_breaks = 500)
}
